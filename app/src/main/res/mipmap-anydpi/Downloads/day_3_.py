# -*- coding: utf-8 -*-
"""Day 3 .ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/156i0m-d30X0wRT_YQCVes8SEHBfetWNz
"""

l = [10, 10, 10, 20, 30, 10, 30, 10]

1.	Find the Maximum and Minimum Elements:
○	Question: Write a function to find the maximum and minimum elements in an array.
○	Logic: Iterate through the array, updating the maximum and minimum as you go.
○	Sample Input: [5, 3, 9, 2, 8]
○	Expected Output: Maximum: 9, Minimum: 2

l = [5, 3, 9, 2, 8]
max = min = 0
for x in l:
  if x > max:
    max = x
    print(" max -> ",  max)
  if x < min:
    min = x
    print(" min -> ",  min)

print("Max : ", max,  " Min : ", min)

l = [5, 3, 9, 2, 8]
max = 0
min = l[0]

for x in range(len(l)):
  if l[x] > max:
    max = l[x]
  if x < min:
    min = l[x]


print("Max : ", max,  " Min : ", min)

2.	Find the Second Largest Element:
○	Question: Find the second largest element in an array.
○	Logic: Initialize two variables to store the largest and second-largest elements and iterate through the array.
○	Sample Input: [7, 3, 9, 2, 8]
○	Expected Output: Second Largest: 8

3.	Remove Duplicates from Unsorted Array:
○	Question: Write a function to remove duplicates from an unsorted array.
○	Logic: Use a hash set to keep track of unique elements as you iterate through the array.
○	Sample Input: [3, 2, 3, 1, 2, 4]
○	Expected Output: [3, 2, 1, 4]

l = [3, 2, 3, 1, 2, 4]
result_list = []
unique_element = set()

for x in l:
  if x not in unique_element:
    unique_element.add(x)
    result_list.append(x)

print(result_list)

8.	Rearrange Positive and Negative Numbers:
○	Question: Given an array containing both positive and negative numbers, rearrange them in an alternating fashion.
○	Logic: Separate positive and negative numbers, then merge them alternately.
○	Sample Input: [-1, 2, -3, 4, 5, -6]
○	Expected Output: [-1, 2, -3, 4, -6, 5]



9.	Find the Majority Element:
○	Question: Find the majority element (element that appears more than n/2 times) in an array.
○	Logic: Use Moore's Voting Algorithm to find the majority element.
○	Sample Input: [3, 3, 4, 2, 4, 4, 2, 4, 4]
○	Expected Output: Majority Element: 4

# String

s = "Hello, Python"
s

s = "नमस्कार, धनराज तुम्ही कसे आहात ?"
s

message = "હેલો, ધનરાજ તમે કેમ છો ?"
message

s = "Program"
type(s)

id(s)

for character in s:
  print(character)

ord("A") ---> number ---> ord(string)

ord("A")

chr(65)  --> int --> chr(integer_value)

print(chr(97))

s = "😊😊😊😊"
s

s = "Python is good programming language"

for word in range(len(s)-1, 0 ,-1):
  print(word)

s = "Python is good programming language"

for index in range(len(s)-1, -1 ,-1):
  print("at index :", index, " we have -> ", s[index])

s = "Python is good programming language".split()
s

for word in s:
  print(word)

sample --> program
expected -->

p
p r
p r o

program

line = "program"

for character in line:
  print(character)

# slicing

[start : end : steps]

start --> 0 --> optional
end   --> len() --> optional
steps --> 1 --> optional


a = slice(start, end, steps)

line = "program"

line[::2]

t = (1,2, 3, 4)

a = slice(1, 3)

print(t[a])

line = "program"

for index in range(len(line)):
  print(line[:index+1:])

s1 = "program"
s2 = "hello"

print(s1 + s2)

s = "hello"

print(s * 5)

# *
# * *
# * * *
# * * * *

for x in range(5):
  print("* "*x)

# * * * *
# * * *
# * *
# *

for x in range(5, -1, -1):
  print("* "*x)

#    *
#   * *
#  * * *


for x in range(5):
  print(" "*(5-x), "* "*x)

# Take a input from user

# I/p --> How are you
# o/p -->

# you
# you are
# you are how


user_line = input("Enter Line : ").split()
user_line  = user_line[::-1]
rev_line = ''

for word in user_line:
  rev_line += word + " "
  print(rev_line)

# upper()
# lower()
# center()
# capatalize()
# title()

s = input("Enter something --> ").lower()
s

s = input("Enter something --> ").upper()
s

s = input("Enter something --> ").lower()

s.center(s, "*")

s = input("Enter something --> ").lower()

s.center(len(s) + 10, " ")

s = input("Enter something --> ").lower()

s.capitalize()

s = input("Enter something --> ").lower()

s.title()

# A : 65
# Z : 90

for x in range(ord("A"), ord("Z")+1):
  print(chr(x),  " : ", x)

# Read two characters from user
start --> a
end ---> D

output -->
----------------


A
A B
A B C
A B C D

# output -->  Max word : the , count : 4

line = "the the the the  and and are are".split()

word_list = list(set(line))
max = 0
max_word = ''

for word in word_list:

  if line.count(word) > max:
    max = line.count(word)
    max_word = word

print("Max Word : ", max_word, " Count : ", max)

